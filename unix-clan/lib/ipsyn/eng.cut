@UTF8
@Color words:	RULENAME: 7 65535 773 0 
% The following lines marked with % explain the interpretation of symbols in the rules

% += means variable can match any number of times
% = means variable can match once
% + means OR
% $b means beginning of utterance
% $e means end of utterance, excluding utterance delimiter

% The interpretation of the "^" operator inside a rule can be changed by
% placing a single character in the first column of a line by itself before that rule.  
% For this function the ^ symbol means AND in any order
% and the > symbol means AND in the specified order.
% These declarations apply to all following rules until reversed.
% The following line with just the symbol >sets them to the AND in a determined order version
>

% The following set of markers specify the nature of the string to be matched
%  ,  separates alternative elements, but also has special use (example: |adv,-ly for adverbs in -ly)
% # prefix marker
% | part-of-speech marker
% ; stem of the word marker
% - suffix marker
% & nonconcatenated morpheme marker
% = English translation for the stem marker
% @ replacement word preceding [: ...] code marker
% * error code inside [* ...] code marker
% followed, optionally, by - or + and immediately followed by either one:
%     *        find any match
%     %        erase any match
%     string   find "string"
% o erase all other elements not specified by user
%     o%    erase all other elements
%     o~    erase postclitic element, if present
%     o$    erase preclitic element, if present

%  postclitic AND preclitic use this particular syntax:
%  find postclitics with specific morphosyntactic marker 
%  examples:    |*,~|*   (for any POS followed by clitic with any POS
%  OR   ;*,~;*   (for any stem followed by clitic with any stem) 
%  find preclitic with specific morphosyntactic marker
%  example:    |*,$|*   OR   ;*,$;*  (see above)

% Each rule starts with "RULENAME". It may have one or more conditionals group designated with "if".
% The "ADD" element is associated with "RULENAME" group only. 
% All other elements are associated with conditional group "if" of each rule "RULENAME".
% Conditional group can have only one "POINT", "INCLUDE", "EXCLUDE" or "DIFFERENT_STEMS".
% Other elements can be listed once or more.  All listing on each of those elements are treated as an "AND".
% Each of those elements listed separately is considered as an "OR".

% The following is the list of variables used in the rules.
% Variables are marked in rules with $, as in $N.
N  = |n,|n:prop,|n:pt
V  = |v,|cop,|aux
AMC = |aux,|mod,|cop
PRO   = |pro:per,|pro:indef,|pro:refl,|pro:obj,|pro:sub
MOD += |adj,|det:art,|det:poss,|det:num,|det:dem,|qn
ART = |det:art
DET = |det:dem
ADV   = |adv,|adv:loc,|adv:tem,|adv:int
MODPAST = could + might + should
NP   = $N + $PRO + ($MOD ^ $N) + ($DET ^ $N) + ($ART ^ $N) + ($ART ^ $MOD ^ $N) + ($DET ^ $MOD ^ $N)

RULENAME: N1
if
INCLUDE:	$N
DIFFERENT_STEMS:		1

RULENAME: N2
if
INCLUDE:	$PRO
DIFFERENT_STEMS:		1

RULENAME: N3
if
INCLUDE:	$MOD + $DET
DIFFERENT_STEMS:		1

RULENAME: N4
if
INCLUDE:	$MOD ^ $N
DIFFERENT_STEMS:		>1

RULENAME: N5
if
INCLUDE:	($ART ^ $N) + ($ART ^ $MOD ^ $N)
DIFFERENT_STEMS:		>1

RULENAME: N6
if
INCLUDE:	($V ^ $MOD ^ $N) + (|prep ^ $MOD ^ $N)
DIFFERENT_STEMS:		>2

RULENAME: N7
if
INCLUDE:	$N,-PL
DIFFERENT_STEMS:		1
if
POINT:	2
INCLUDE:	$N,-PL + |n:pt
DIFFERENT_STEMS:		1

RULENAME: N8
if
INCLUDE:	$MOD ^ $N ^ $V
DIFFERENT_STEMS:		>2

RULENAME: N9
if
INCLUDE:	$MOD ^ $MOD ^ $N
DIFFERENT_STEMS:		>2

RULENAME: N10
if
INCLUDE:	($ADV ^ $MOD)
DIFFERENT_STEMS:		>1

RULENAME: N11
if
INCLUDE:	|n,-* + |adj,-* + |n,#* + |adj,#*
EXCLUDE:	-POSS + -PL
DIFFERENT_STEMS:		1


RULENAME: V1
if
INCLUDE:	$V
EXCLUDE:	look + stop
DIFFERENT_STEMS:	1

RULENAME: V2
if
INCLUDE:	|prep
DIFFERENT_STEMS:	1

RULENAME: V3
if
INCLUDE:	|prep ^ $NP
EXCLUDE:	(lookit ^ this) + (in ^ there) + (on ^ there)
DIFFERENT_STEMS_POS:	1
if
POINT:	2
INCLUDE:	(in ^ there) + (on ^ there)

RULENAME: V4
if
INCLUDE:	$NP ^ |cop ^ ($NP + $MOD)
EXCLUDE:	how ^ are ^ you ^ ?
DIFFERENT_STEMS:	>1
if
POINT:	2
INCLUDE:	|*,~|cop

RULENAME: V5
if
INCLUDE:	(|mod:aux ^ $V)
DIFFERENT_STEMS:	>1

RULENAME: V6
if
INCLUDE:	(|aux ^ $V) + (|aux ^|neg ^ $V) + (|aux ^*^ |part)
DIFFERENT_STEMS:	>1
if
POINT:	2
INCLUDE:	don't

RULENAME: V7
if
INCLUDE:	|part,-PRESP
DIFFERENT_STEMS:	1

RULENAME: V8
if
INCLUDE:	$ADV
EXCLUDE:	(I ^ think ^ so) + here + there
DIFFERENT_STEMS:	>1

RULENAME: V9
if
INCLUDE:	|mod ^ $V
EXCLUDE:	(I ^ think ^ so) + here + there
DIFFERENT_STEMS:	1
if
POINT:	2
INCLUDE:	can't + won't

RULENAME: V10
if
INCLUDE:	|v,-3S
EXCLUDE:	does + says
DIFFERENT_STEMS:	1

RULENAME: V11
if
INCLUDE:	$MODPAST
DIFFERENT_STEMS:	1

RULENAME: V12
if
INCLUDE:	|v,-PAST + |v,-PASTP
DIFFERENT_STEMS:	1

RULENAME: V13
if
INCLUDE:	(|aux,-PAST) + (|aux,&PAST) + did + didn't
DIFFERENT_STEMS:	1

RULENAME: V14
if
INCLUDE:	$ADV ^ $V
DIFFERENT_STEMS:	>1

RULENAME: V15
if
INCLUDE:	can + is + do + did
DIFFERENT_STEMS:	1
EXCLUDE:	(|aux) + (|v) + (I ^ can't)

RULENAME: V16
if
INCLUDE:	|cop,&PAST
DIFFERENT_STEMS:	1

RULENAME: V17
if
INCLUDE:	#*,|v + -LY
EXCLUDE:	hardly + really
DIFFERENT_STEMS:	1

RULENAME: Q1
ADD:	2 IF Q4 = 2
ADD:	2 IF Q8 = 2
if
% INCLUDE:	(* ^*^ ?)
DIFFERENT_STEMS:	>1

RULENAME: Q2
ADD:	2 IF Q4 = 2
ADD:	2 IF Q8 = 2
if
INCLUDE:	(why ?) + (where ^*^ going ?) + (what this ?) + (who else ?)
DIFFERENT_STEMS:	>1

RULENAME: Q3
if
INCLUDE:	|neg,;not + |qn,;no
DIFFERENT_STEMS:	>1

RULENAME: Q4
if
INCLUDE:	(|pro:int ^*^ |v) + (|adv:int ^*^ |v)
DIFFERENT_STEMS:	>1

RULENAME: Q5
if
INCLUDE:	($NP ^*^ |neg ^ |v)
DIFFERENT_STEMS:	>1
if
POINT:	2
INCLUDE:	I don't know

RULENAME: Q6
if
INCLUDE:	(|pro:int + |adv:int) ^ (|aux + |mod + |cop) 
DIFFERENT_STEMS:	1
if
POINT:	2
INCLUDE:	how are you ?

RULENAME: Q7
if
INCLUDE:	((|cop + |mod + |aux) ^ |neg) + ((|cop + |mod + |aux) ^ ~|neg,;not)
EXCLUDE:	how are you
DIFFERENT_STEMS:	1
if
POINT:	2
INCLUDE:	$NP ^ (don't + can't) ^ |v

RULENAME: Q8
if
INCLUDE:	(|cop + |mod + |aux) ^ $NP
DIFFERENT_STEMS:	>1

RULENAME: Q9
if
INCLUDE:	why + when + which + whose
DIFFERENT_STEMS:	1

RULENAME: Q10
if
INCLUDE:	â€ž

RULENAME: Q11
if
INCLUDE:	((|cop + |mod + |aux) ^ |neg ^ $NP) + ((|cop + |mod + |aux) ^ ~|neg,;not ^ $NP)
DIFFERENT_STEMS:	1

RULENAME: S1
if
INCLUDE:	|* ^ |*
DIFFERENT_STEMS:	1

RULENAME: S2
if
INCLUDE:	0|SUBJ ^*^ |v
DIFFERENT_STEMS:	1

RULENAME: S3
if
INCLUDE:	|v ^ $NP
DIFFERENT_STEMS:	1

RULENAME: S4
if
INCLUDE:	$NP ^ |v ^ $NP
DIFFERENT_STEMS:	1

RULENAME: S5
if
INCLUDE:	and + or
DIFFERENT_STEMS:	1

RULENAME: S6
if
INCLUDE:	|v ^*^ |v
DIFFERENT_STEMS:	1

RULENAME: S7
if
INCLUDE:	($NP ^ |coord ^ $NP) + (|adj ^ |coord ^ |adj) + (|v ^*^ |conj ^*^ |v)
DIFFERENT_STEMS:	>1

RULENAME: S8
if
INCLUDE:	|v^|inf

RULENAME: S9
if
INCLUDE:	((let + let's) ^*^ |v) + ((make + help + watch) ^ $NP)
DIFFERENT_STEMS:	1

RULENAME: S10
if
INCLUDE:	$b^|conj
DIFFERENT_STEMS:	>1

RULENAME: S11
if
INCLUDE:	0|COMP
DIFFERENT_STEMS:	1

RULENAME: S12
if
INCLUDE:	0|SUBJ ^*^ |conj ^*^ 0|SUBJ
DIFFERENT_STEMS:	1

RULENAME: S13
if
INCLUDE:	(where ^ $NP) + (if ^ $NP)
DIFFERENT_STEMS:	1

RULENAME: S14
if
INCLUDE:	(|v ^ $NP ^ $NP) + (|v ^ $NP ^ to ^ $NP) + (|v ^ $NP ^ for ^ $NP)
DIFFERENT_STEMS:	1

RULENAME: S15
if
INCLUDE:	(|v + |part) ^*^ (|v + |part) ^*^ (|v + |part)
DIFFERENT_STEMS:	1

RULENAME: S16
if
INCLUDE:	0|CMOD
DIFFERENT_STEMS:	1

RULENAME: S17
if
INCLUDE:	0|COMP
DIFFERENT_STEMS:	>1

RULENAME: S18
if
INCLUDE:	|n:gerund
DIFFERENT_STEMS:	1

RULENAME: S19
if
INCLUDE:	($b^|conj)+($b^the^one)
DIFFERENT_STEMS:	1

RULENAME: S20
if
INCLUDE:	(|aux ^*^ |part,-PASTP) + (|aux ^*^ |part,&PASTP)+ (I ^ guess) + (I ^ imagine)
DIFFERENT_STEMS:	1


% Rules sums
+ N = N*
+ V = V*
+ Q = Q*
+ S = S*

